{"version":3,"sources":["components/UI/Card/Card.jsx","components/Expense-Related/ExpenseDate/ExpenseDate.jsx","components/Expense-Related/ExpenseItem/ExpenseItem.jsx","components/Expense-Related/ExpenseList/ExpenseList.jsx","components/Expense-Related/ExpenseFilter/ExpensesFilter.jsx","components/UI/Chart/ChartBar/ChartBar.jsx","components/UI/Chart/Chart/Chart.jsx","components/Expense-Related/ExpenseChart.jsx","components/Expense-Related/Expenses/Expenses.jsx","components/UI/Form/Form.jsx","components/Expense-Related/NewExpense/NewExpense.jsx","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseDate","day","eDate","toLocaleDateString","month","year","getFullYear","ExpenseItem","val","date","eAmount","amount","eTitle","title","ExpenseList","filteredExpenses","length","map","id","ExpensesFilter","value","selectedYear","onChange","event","onYearSelect","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","arrVal","dataPoints","dataPoint","max","ExpenseChart","expenses","expense","getMonth","Expenses","useState","InputYear","setInputYear","filter","toString","Form","inputTitle","setinputTitle","inputAmount","setinputAmount","inputDate","setinputDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","events","min","step","onClick","onCancel","NewExpense","isAddingNewExpense","setisAddingNewExpense","inputExpenceData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa0aef79.chunk.js","sourcesContent":["import './Card.css'\nconst Card = (props) =>{\n    const classes = 'card ' + props.className;\n    return (<div className={classes}>{props.children}</div>)\n}\nexport default Card;","import \"./ExpenseDate.css\";\nexport const ExpenseDate = (props) => {\n  const day = props.eDate.toLocaleDateString(\"en-US\", { day: \"2-digit\" });\n  const month = props.eDate.toLocaleDateString(\"en-US\", { month: \"long\" });\n  const year = props.eDate.getFullYear();\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__day\">{day}</div>\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./ExpenseItem.css\";\nimport Card from \"../../UI/Card/Card\";\nimport { ExpenseDate } from \"../ExpenseDate/ExpenseDate\";\nconst ExpenseItem = (props) => {\n  const eDate = props.val.date;\n  const eAmount = props.val.amount;\n  const eTitle = props.val.title;\n\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate eDate={eDate} />\n        <div className=\"expense-item__description\">\n          <h2>{eTitle}</h2>\n          <div className=\"expense-item__price\"> ${eAmount} </div>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import \"./ExpenseList.css\";\nimport ExpenseItem from \"../ExpenseItem/ExpenseItem\";\nconst ExpenseList = (props) => {\n  if (props.filteredExpenses.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">Found No Expenses</h2>;\n  }\n  return (\n    <ul className=\"expense-list\">\n      {props.filteredExpenses.map((val) => {\n        return <ExpenseItem val={val} key={val.id} />;\n      })}\n    </ul>\n  );\n};\n\nexport default ExpenseList;\n","import React from \"react\";\n\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  const FilterChangeHandler = (event) => {\n    props.onYearSelect(event.target.value);\n  };\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selectedYear} onChange={FilterChangeHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n    let barFillHeight = \"0%\";\n    if(props.maxValue>0){\n        barFillHeight = Math.round((props.value/props.maxValue)*100)+'%';\n    }\n\n    return(\n        <div className=\"chart-bar\">\n            <div className=\"chart-bar__inner\">\n                <div className=\"chart-bar__fill\" style={{height:barFillHeight}}>\n\n                </div>\n            </div>\n            <div className=\"chart-bar__label\">{props.label}</div>\n        </div>\n    )\n};\n\nexport default ChartBar;\n","import \"./Chart.css\";\nimport ChartBar from \"../ChartBar/ChartBar\";\n\nconst Chart = (props) => {\n    const arrVal = props.dataPoints.map(dataPoint=>dataPoint.value)\n    const maxValue = Math.max(...arrVal)\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          label={dataPoint.label}\n          maxValue={maxValue}\n          value={dataPoint.value}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import Chart from \"../UI/Chart/Chart/Chart\";\nconst ExpenseChart = (props) => {\n  const dataPoints = [\n    {\n      label: \"Jan\",\n      value: 0,\n    },\n    {\n      label: \"Feb\",\n      value: 0,\n    },\n    {\n      label: \"March\",\n      value: 0,\n    },\n    {\n      label: \"April\",\n      value: 0,\n    },\n    {\n      label: \"May\",\n      value: 0,\n    },\n    {\n      label: \"June\",\n      value: 0,\n    },\n    {\n      label: \"July\",\n      value: 0,\n    },\n    {\n      label: \"Aug\",\n      value: 0,\n    },\n    {\n      label: \"Sep\",\n      value: 0,\n    },\n    {\n      label: \"Oct\",\n      value: 0,\n    },\n    {\n      label: \"Nov\",\n      value: 0,\n    },\n    {\n      label: \"Dec\",\n      value: 0,\n    },\n  ];\n  for (const expense of props.expenses){\n      const expenseMonth = expense.date.getMonth();\n      dataPoints[expenseMonth].value+=expense.amount;\n  }\n  \n  return <Chart dataPoints={dataPoints} />;\n};\n\nexport default ExpenseChart;\n","import ExpenseList from \"../ExpenseList/ExpenseList\";\nimport Card from \"../../UI/Card/Card\";\nimport React, { useState } from \"react\";\nimport \"./Expenses.css\";\nimport ExpensesFilter from \"../ExpenseFilter/ExpensesFilter\";\nimport ExpenseChart from \"../ExpenseChart\";\nexport const Expenses = (props) => {\n  const [InputYear, setInputYear] = useState(\"2020\");\n\n  const yearFilterHandler = (selectedYear) => {\n    setInputYear(selectedYear);\n  };\n\n  const filteredExpenses = props.expenses.filter((expense) => {\n    return InputYear === expense.date.getFullYear().toString();\n  });\n\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          onYearSelect={yearFilterHandler}\n          selectedYear={InputYear}\n        />\n        <ExpenseChart expenses={filteredExpenses} />\n        <ExpenseList filteredExpenses={filteredExpenses}/>\n      </Card>\n    </div>\n  );\n};\n","import \"./Form.css\";\nimport React, { useState } from \"react\";\nconst Form = (props) => {\n  const [inputTitle, setinputTitle] = useState(\"\");\n  const [inputAmount, setinputAmount] = useState(\"\");\n  const [inputDate, setinputDate] = useState(\"\");\n\n  const titleChangeHandler = (events) => {\n    setinputTitle(events.target.value);\n  };\n\n  const amountChangeHandler = (events) => {\n    setinputAmount(events.target.value);\n  };\n\n  const dateChangeHandler = (events) => {\n    setinputDate(events.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const expenseData = {\n      title: inputTitle,\n      amount: inputAmount,\n      date: new Date(inputDate),\n    };\n    props.onSaveExpenseData(expenseData);\n    setinputTitle(\"\");\n    setinputAmount(\"\");\n    setinputDate(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input type=\"text\" value={inputTitle} onChange={titleChangeHandler} />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.1\"\n            step=\"0.1\"\n            value={inputAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={inputDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={props.onCancel}>Cancel</button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\nexport default Form;","import React, { useState } from \"react\";\nimport Form from \"../../UI/Form/Form\";\nimport \"./NewExpense.css\";\n\nconst NewExpense = (props) => {\n  const [isAddingNewExpense, setisAddingNewExpense] = useState(false);\n  const saveExpenseDataHandler = (inputExpenceData) => {\n    const expenseData = {\n      ...inputExpenceData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expenseData);\n    setisAddingNewExpense(false);\n  };\n\n  const startAddingHandler = () => {\n    setisAddingNewExpense(true);\n  };\n\n  const stopEditingHandler = () =>{\n    setisAddingNewExpense(false);\n  }\n  return (\n    <div className=\"new-expense\">\n      {!isAddingNewExpense && (\n        <button onClick={startAddingHandler}>Add new Expense</button>\n      )}\n      {isAddingNewExpense && (\n        <Form onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler}/>\n      )}\n    </div>\n  );\n};\nexport default NewExpense;\n","import React, { useState } from \"react\";\nimport { Expenses } from \"./components/Expense-Related/Expenses/Expenses\";\nimport NewExpense from \"./components/Expense-Related/NewExpense/NewExpense\";\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      {/* <h2>Let's get started!</h2> */}\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses expenses={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}